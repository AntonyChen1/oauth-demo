server:
  port: 8081

#spring:
#  security:
#    oauth2:
#      client:
#        registration:
#          informatica:
#            client-id: isoqQqIc5Oqg8lTtpakBor
#            client-secret: JCeOE4fkv
#            authorization-grant-type: client_credentials
#            scope: read, write
#        provider:
#          informatica:
#            token-uri: https://dm-ap.informaticacloud.com/authz-service/oauth/token

#spring:
#  security:
#    oauth2:
#      client:
#        registration:
#          my-login-client:
#            client-id: "abcd"
#            client-secret: "password"
#            client-name: "Client for OpenID Connect"
#            provider: "my-oauth-provider"
#            scope: "openid,profile,email,phone,address"
#            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
#            client-authentication-method: "client_secret_basic"
#            authorization-grant-type: "authorization_code"
#
#          my-client-1:
#            client-id: "abcd"
#            client-secret: "password"
#            client-name: "Client for user scope"
#            provider: "my-oauth-provider"
#            scope: "user"
#            redirect-uri: "{baseUrl}/authorized/user"
#            client-authentication-method: "client_secret_basic"
#            authorization-grant-type: "authorization_code"
#
#          my-client-2:
#            client-id: "abcd"
#            client-secret: "password"
#            client-name: "Client for email scope"
#            provider: "my-oauth-provider"
#            scope: "email"
#            redirect-uri: "{baseUrl}/authorized/email"
#            client-authentication-method: "client_secret_basic"
#            authorization-grant-type: "authorization_code"
#
#        provider:
#          my-oauth-provider:
#            authorization-uri: "http://localhost:8081/oauth2/authorize"
#            token-uri: "http://localhost:8081/oauth2/token"
#            user-info-uri: "http://localhost:8081/userinfo"
#            user-info-authentication-method: "header"
#            jwk-set-uri: "http://localhost:8081/oauth2/jwks"
#            user-name-attribute: "name"
#
#      authorizationserver:
#        client:
#          my-client:
#            registration:
#              client-id: "efgh"
#              client-secret: "secret"
#              client-authentication-methods:
#                - "client_secret_jwt"
#              authorization-grant-types:
#                - "client_credentials"
#              scopes:
#                - "user.read"
#                - "user.write"
#            jwk-set-uri: "https://my-client-2.com/jwks"
#            token-endpoint-authentication-signing-algorithm: "RS256"